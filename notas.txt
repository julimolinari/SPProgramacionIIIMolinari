Parcial, armar base, elegir de que manera conectarnos. slim

composer init 

composer require slim/slim:"4.*"

composer require slim/psr7




conexion a sql  y consultas.


https://laravel.com/docs/8.x/eloquent

composer

https://packagist.org/packages/illuminate/database

composer require illuminate/database

composer require "illuminate/events"



cuando agrego un namespace  a composer 
composer dump-autoload -o




//

mas metodos de laravel con sql

->orderBy('nombre','desc')

->whereRaw("select * from") escribo en sql

::first (trae un objeto)
:: where ('id',1)->first();

->whereColumn('')


::find(1); //busca por id

::find(1,3,3) ; //le paso array como el in de sql  


::where('id','111111')->firstOrFail(); //tira una exception si falla 



__TABLAS RELACIONADAS

https://laravel.com/docs/8.x/eloquent-relationships


class User extends Model
{
    /**
     * Get the phone record associated with the user.
     */
    public function phone()
    {
        return $this->hasOne('App\Models\Phone');
    }
}

















$app->get('/', function (Request $request, Response $response, $args) {
   // $rta = Usuario::get(); get obtener todos los resultados
   $rta = Usuario::where('id','>',2)
   ->where('id_localidad','=',2)
   
   
   ->get();
    $response->getBody()->write(json_encode(($rta)));
    return $response;
});

//POST------------------------------------------------------

$app->post('/', function (Request $request, Response $response, $args) {
    
    $user = new Usuario;

    $user->apellido="ppepe";
    $user->nombre="rodrigues";
    $user->id_localidad=2;
    $user->materia=1;
    
    $rta = $user->save();

    $response->getBody()->write(json_encode($rta));
    
     return $response;
 });



 //PUT_____________________________-modificar

 $app->put('/{id}', function (Request $request, Response $response, $args) {
    
    $user = Usuario::find(7);

    $user->apellido="Molinari"; //updeteo los datos.
    $user->nombre="Juli";
    // $user->id_localidad=2;
    // $user->materia=1;
    
    $rta = $user->save();// cambio el save por delete para borrar, metodo delete tmb en postman

    $response->getBody()->write(json_encode($user));
    
     return $response;
 });
